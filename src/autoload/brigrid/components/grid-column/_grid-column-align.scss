@charset "UTF-8";

/// Creates column alignment (Supports only flex driver)
///
/// @name Grid column alignment
///
/// @group components
///
/// @argument {string | map} $align-x [null]
///     Specifies the horizontal alignment of the column
///     It can be indicated by:
///     1) a string (null | start | center | end)
///     2) or a media map where each of its keys points to a breakpoint,
///     and the value specifies the horizontal self-alignment of the column
///         (Example: (md: start, lg: center, xl: end))
///
/// @argument {string | map} $align-y [null]
///     Specifies the vertical alignment of the column
///     It can be indicated by:
///     1) a string (null | start | end | center | baseline | stretch | auto)
///     2) or a media map where each of its keys points to a breakpoint,
///     and the value specifies the vertical self-alignment of the column
///         (Example: (md: start, lg: center, xl: end))
///
/// @argument {map} $grid [$default-grid]
///     The grid map settings (driver, breakpoints) will be used to create a column alignment.
///     By default, the global '$default-grid' will be used.
///
/// @example scss
///     $example-grid: prepare-grid((
///         driver: flex,
///         breakpoints: (
///             xs: 0,
///             sm: 576px,
///             md: 768px,
///             lg: 992px,
///             xl: 1200px,
///             xx: 1600px
///         )
///     ));
///     .element {
///         @include grid-column-align(
///             $align-x: (
///                 md: start,
///                 lg: center,
///                 xl: end
///             ),
///             $align-y: (
///                 md: start,
///                 lg: center,
///                 xl: end
///             ),
///             $grid: $example-grid
///         );
///     }
///
/// @example css
///     .element {
///         margin-right: auto;
///         margin-left: 0;
///         align-self: flex-start;
///     }
///     @media only screen and (min-width: 992px) {
///         .element {
///             margin-left: auto;
///             margin-right: auto;
///             align-self: center;
///         } 
///     }
///     @media only screen and (min-width: 1200px) {
///         .element {
///             margin-left: auto;
///             margin-right: 0;
///             align-self: flex-end;
///         }
///     }

@mixin grid-column-align($align-x: null, $align-y: null, $grid: $default-grid) {
    $driver: get-grid-value(driver, $grid);
    $reversed: get-grid-value(reversed, $grid);

    @if ($driver == flex) {
        // X-axis alignment
        @if ($align-x != null) {
            $align-x: _convert-to-media-map($align-x, $grid);
            @include _for-media-map($align-x, $grid) {
                $bp-align-x: $_for-media-map-value;
                @if ($bp-align-x == start) or (($bp-align-x == end) and $reversed) {
                    margin-right: auto;
                    margin-left: 0;
                } @else if ($bp-align-x == end) or (($bp-align-x == start) and $reversed) {
                    margin-left: auto;
                    margin-right: 0;
                } @else if ($bp-align-x == center) {
                    margin-left: auto;
                    margin-right: auto;
                } @else {
                    @error "[Brigrid]: Unknown $align-x value: '#{$bp-align-x}'";
                }
            }
        }

        // Y-axis alignment
        @if ($align-y != null) {
            $align-y: _convert-to-media-map($align-y, $grid);
            $allowed-align-y-values: (start, end, center, baseline, stretch, auto);
            @include _for-media-map($align-y, $grid) {
                $bp-align-y: $_for-media-map-value;
                @if (index($allowed-align-y-values, $bp-align-y) != null) {
                    @if ($bp-align-y == start) {
                        align-self: flex-start;
                    } @else if ($bp-align-y == end) {
                        align-self: flex-end;
                    } @else {
                        align-self: $bp-align-y;
                    }
                } @else {
                    @error "[Brigrid]: Unknown $align-y value: '#{$bp-align-y}'";
                }
            }
        }
    }
}
