@charset "UTF-8";

/// Creates column order (Supports only flex driver)
///
/// @name Grid column order
///
/// @group components
///
/// @argument {number (unitless) | map} $order [null]
///     Specifies the order of the column.
///     It can be indicated by:
///     1) a number (unitless)
///     2) or a media map where each of its keys points to a breakpoint,
///     and the value specifies the order of the column
///         (Example: (md: 0, lg: 1, xl: 2))
///
/// @argument {map} $grid [$default-grid]
///     The grid map settings (driver, breakpoints) will be used to create a column order.
///     By default, the global '$default-grid' will be used.
///
/// @example scss
///     $example-grid: prepare-grid((
///         driver: flex,
///         breakpoints: (
///             xs: 0,
///             sm: 576px,
///             md: 768px,
///             lg: 992px,
///             xl: 1200px,
///             xx: 1600px
///         )
///     ));
///     .element {
///         @include grid-column-order((
///             md: -1,
///             lg: 0,
///             xl: 1
///         ));
///     }
///
/// @example css
///     .element {
///         order: -1;
///     }
///     @media only screen and (min-width: 992px) {
///         .element {
///             order: 0;
///         }
///     }
///     @media only screen and (min-width: 1200px) {
///         .element {
///             order: 1;
///         }
///     }

@mixin grid-column-order($order: null, $grid: $default-grid) {
    $driver: get-grid-value(driver, $grid);
    @if ($driver == flex) {
        @if ($order != null) {
            $orders: _convert-to-media-map($order, $grid);
            @include _for-media-map($orders, $grid) {
                $bp-order: $_for-media-map-value;
                @if (type-of($bp-order) == number) {
                    order: $bp-order;
                } @else {
                    @error "[Brigrid]: Invalid type of order. Order must be a number!";
                }
            }
        }
    } @else {
        @warn "[Brigrid]: Driver '#{$driver}' is not support alignment";
    }
}
