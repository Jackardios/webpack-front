@charset "UTF-8";

/// Collapses grid container by consuming the gutters of its container, for use in nested layouts.
///
/// @name Grid collapse
///
/// @group components
/// @argument {map} $grid [$default-grid]
///     The grid map settings (gutter, breakpoints) will be used to create a collapse.
///     By default, the global '$default-grid' will be used.
///
/// @example scss
///     $example-grid: prepare-grid((
///         gutter: (
///             md: 20px,
///             xl: 30px
///         )
///     ));
///     .element {
///         @include grid-collapse(
///             $grid: $example-grid
///         );
///     }
///
/// @example css
///     .element {
///         margin-left: -10px;
///         margin-right: -10px;
///     }
///     @media only screen and (min-width: 1200px) {
///         .element {
///             margin-left: -15px;
///             margin-right: -15px;
///         }
///     }

@mixin grid-collapse($grid: $default-grid) {
    $grid-gutters: _convert-to-media-map(get-grid-value(gutter, $grid), $grid);
    @include _for-media-map($grid-gutters, $grid) {
        $bp-gutter: $_for-media-map-value;
        @if (unit($bp-gutter) == '%') {
            @warn "[Brigrid]: grid-collapse in percentage gutter based grids may not work correctly";
        }
        margin-left: ($bp-gutter / -2);
        margin-right: ($bp-gutter / -2);
    }
}
