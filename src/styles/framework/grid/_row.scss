// flexbox based row styles
%row-flex {
    display: flex;
    box-sizing: border-box;
}

@mixin row-flex($grid: $default-grid) {
    @extend %row-flex;
    flex-wrap: get-grid-value(wrap, $grid);

    $collapse: get-grid-value(collapse, $grid);
    $align-x: get-grid-value(align-x, $grid);
    $align-y: get-grid-value(align-y, $grid);
    $reversed: get-grid-value(reversed, $grid);

    // collapse
    @if $collapse == true {
        @include collapse($grid);
    }

    // X-axis alignment
    @if ($align-x == left and $reversed == false) or
        ($align-x == right and $reversed == true) {
        justify-content: flex-start;
    } @else if ($align-x == left and $reversed == true) or
               ($align-x == right and $reversed == false) {
        justify-content: flex-end;
    } @else {
        justify-content: $align-x;
    }

    // Y-axis alignment
    @if ($align-y == top) {
        align-items: flex-start;
    } @else if ($align-y == bottom) {
        align-items: flex-end;
    } @else {
        align-items: $align-y;
    }

    // Reverse
    @if $reversed == true {
        flex-direction: row-reverse;
    } @else {
        flex-direction: row;
    }
}

// float based row styles
%row-float {
    box-sizing: border-box;
    overflow-x: hidden;
    &::after {
        content: ' ';
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
}

@mixin row-float($grid: $default-grid) {
    @extend %row-float;

    $collapse: get-grid-value(collapse, $grid);

    // collapse
    @if $collapse == true {
        @include collapse($grid);
    }
}

// common mixin row()
@mixin row($grid: $default-grid) {

    $driver: get-grid-value(driver, $grid);
    @if $driver == flex {
        @include row-flex($grid: $grid);
    } @else if $driver == float {
        @include row-float($grid: $grid);
    }

}
