// helpers
@function get-grid-value($key, $grid: $default-grid) {
    $value: map-get($grid, $key);
    @if $value == null {
        $value: map-get($default-grid, $key);
    }
    @return $value;

}

@function col-width($columns, $grid: $default-grid) {
    $grid-gutter: get-grid-value(gutter, $grid);
    $grid-columns: get-grid-value(columns, $grid);

    $width: 0; // width initialize value

    @if $grid-gutter == 0 {
        $width: #{100% / $grid-columns * $columns};
    } @else if unit($grid-gutter) == '%' {
        $width: (100% / $grid-columns * $columns) - $grid-gutter;
    } @else {
        $width: calc(#{100% / $grid-columns * $columns} - #{$grid-gutter});
    }

    @return $width;

}


@function min-size($sizes-map) {
    $min-name: null;
    $min-value: null;
    @each $name, $columns in $sizes-map {
        $size-value: nth(map-get($grid-breakpoints, $name), 1);
        @if ($min-value == null) or ($size-value < $min-value) {
            $min-name: $name;
            $min-value: $size-value;
        }
    }
    @return $min-name;
}


@function max-size($sizes-map) {
    $max-name: null;
    $max-value: null;
    @each $name, $columns in $sizes-map {
        $size-value: nth(map-get($grid-breakpoints, $name), 1);
        @if ($max-value == null) or ($size-value > $max-value) {
            $max-name: $name;
            $max-value: $size-value;
        }
    }
    @return $max-name;
}
