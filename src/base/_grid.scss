// Brigrid default grid overriding
$default-grid: prepare-grid((
    driver: flex,
    columns: 12,
    outer-container-offset: (
        sm: 16px,
        md: 24px,
    )
));

// grid mixin aliases
@mixin bp-from($bp-name, $grid: $default-grid) {
    @include media-breakpoint-from($bp-name, $grid) {
        @content;
    }
}

@mixin bp-before($bp-name, $grid: $default-grid) {
    @include media-breakpoint-before($bp-name, $grid) {
        @content;
    }
}

@include grid-classes((
    'prefix': '',
    'names': (
        'outer-container': 'wrapper',
        'container': 'grid-container',
        'column': 'grid-col',
        'column-flex': 'grid-col-flex',
        'column-auto': 'grid-col-auto',
    ),
    'components': (
        'container',
        'container-alignment',
        'column',
        'column-media',
        'column-flex',
        'column-auto',
        'hidden',
        'hidden-media',
        'outer-container',
    )
));

.wrapper {
    &--extra-small {
        @extend .wrapper;
        max-width: 768px !important;
    }

    &--small {
        @extend .wrapper;
        @include bp-from(lg) {
            max-width: 900px !important;
        }
    }

    &--large {
        @extend .wrapper;
        @media only screen and (min-width: 1440px) {
            max-width: 1440px;
        }
    }
}

.grid-container {
    &--nowrap {
        flex-wrap: nowrap !important; 
    }

    &--no-gutter {
        margin: {
            left: 0 !important;
            right: 0 !important;
        };

        > .grid-col {
            padding: {
                left: 0 !important;
                right: 0 !important;
            };
        }
    }
}

.grid-col {
    &--v-gutter {
        $v-gutter: get-grid-value(gutter, $default-grid) / 2;
        padding: {
            top: $v-gutter;
            bottom: $v-gutter;
        };
    }

    &--no-gutter {
        padding: {
            left: 0 !important;
            right: 0 !important;
        };
    }
}